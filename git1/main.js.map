{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/errorcomp/errorcomp.component.css","webpack:///./src/app/errorcomp/errorcomp.component.html","webpack:///./src/app/errorcomp/errorcomp.component.ts","webpack:///./src/app/loginview/loginview.component.css","webpack:///./src/app/loginview/loginview.component.html","webpack:///./src/app/loginview/loginview.component.ts","webpack:///./src/app/req.service.ts","webpack:///./src/app/shared.service.ts","webpack:///./src/app/userview/userview.component.css","webpack:///./src/app/userview/userview.component.html","webpack:///./src/app/userview/userview.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".setcolor {\\r\\n    color: blue\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2V0Y29sb3Ige1xyXG4gICAgY29sb3I6IGJsdWVcclxufSJdfQ== */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'git1';\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { UserviewComponent } from './userview/userview.component';\nimport { LoginviewComponent } from './loginview/loginview.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AuthGuard } from './auth.guard';\nimport { ErrorcompComponent } from './errorcomp/errorcomp.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserviewComponent,\n    LoginviewComponent,\n    ErrorcompComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginviewComponent },\n      { path: 'user',\n        canActivate: [AuthGuard],\n        component: UserviewComponent },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '**', component: ErrorcompComponent }\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ReqService } from './req.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  \n  constructor(private reqS: ReqService,\n              private route: Router) {}\n  canActivate(): boolean {\n    if (this.reqS.checkLog()) {\n      return true\n    } else {\n      this.route.navigate(['/login'])\n      return false \n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yY29tcC9lcnJvcmNvbXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container \\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <div class=\\\"mt-5 ml-5\\\">\\n        \\n        <img src=\\\"../../assets/image.png\\\" alt=\\\"\\\"></div>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"mt-5 mr-5\\\">\\n          <a [routerLink] = \\\"['/user']\\\" ><button class=\\\"btn btn-primary\\\">Go Back</button></a>\\n          </div>\\n        </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-errorcomp',\n  templateUrl: './errorcomp.component.html',\n  styleUrls: ['./errorcomp.component.css']\n})\nexport class ErrorcompComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2ludmlldy9sb2dpbnZpZXcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row justify-content-center mt-5 mb-4\\\">\\n    <img src=\\\"../assets/github-logo_icon-icons.com_73546.png\\\" alt=\\\"\\\">\\n  </div>\\n  <div class=\\\"row justify-content-center\\\">\\n      <h3 class=\\\"font-weight-light\\\">Sign in to GitHub</h3>\\n  </div>\\n  <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col col-xl-3 col-lg-4 col-md-5 col-sm-6 p-4 m-4 border rounded\\\">\\n    <form class=\\\"\\\">\\n      <div class=\\\"form-group \\\">\\n        <label for=\\\"exampleInputEmail1\\\"><span class=\\\"font-weight-bold \\\"><h6>Username or email address</h6></span></label>\\n        <input [(ngModel)] = 'typedData.email' name = \\\"email \\\"type=\\\"email\\\" class=\\\"form-control \\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"\\\">\\n        <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\"></small>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"exampleInputPassword1\\\"><span class=\\\"font-weight-bold\\\"><h6>Password</h6></span></label>\\n        <input [(ngModel)] ='typedData.password' name =\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"\\\">\\n      </div>\\n      <div class=\\\"alert alert-danger\\\" *ngIf =\\\"errorMessage\\\" >Invalid username/password</div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success btn-block\\\" (click) = 'testcall()'><span class=\\\"font-weight-bold\\\">Sign in</span></button>\\n    </form>\\n  </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ReqService } from '../req.service';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-loginview',\n  templateUrl: './loginview.component.html',\n  styleUrls: ['./loginview.component.css']\n})\nexport class LoginviewComponent implements OnInit {\n\n  constructor(private reqService: ReqService,\n              private router: Router,\n              private share: SharedService) { }\n  testString:any;\n  savedtoken:any;\n  errorMessage: string;\n  typedData : any = {};\n  //checking if token is saved for auto-login\n  ngOnInit() {\n    if (this.reqService.checkLog()) {\n      this.router.navigate(['/user'])\n    }\n  }\n  //Call to send input data\n  testcall() {\n    this.reqService.simpleReq(this.typedData.email, this.typedData.password).subscribe(\n      data => {\n        this.savedtoken = data.token;\n        localStorage.setItem('token', data.token)\n        this.router.navigate(['/user'])\n      },\n      error => this.errorMessage = <any>error\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { SharedService } from './shared.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReqService {\n  private myUrl = 'https://api.github.com/authorizations/clients/';\n  private dataUrl = 'https://api.github.com/user';\n  private userUrl = 'https://api.github.com/users/';\n  private client_id = 'dd7f821f31f9546c9a84';\n  private client_secret = 'e565736db621016ce2d44b375375b21e4849951a';\n  private userN:string;\n  constructor(private http: HttpClient,\n              private route: Router,\n              private shared: SharedService) { }\n\n  //Authorization call here\n\n  simpleReq(em,pas) : Observable<any> {\n    let rand = Math.random().toString(36).substr(2, 5);\n    let cont = {\n        \"scopes\": [\"repo\",\"write:org\"],\n        \"note\": \"Forauth\",\n        \"client_secret\": \"e565736db621016ce2d44b375375b21e4849951a\",\n        \"fingerprint\": rand,\n            };\n    let sav: string = em + ':' + pas\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'Basic ' + btoa(sav)\n      })\n  };\n    \n    return this.http.put<any>(this.myUrl+this.client_id,cont,httpOptions).pipe(\n      catchError(this.handleError)\n    );\n    \n  }\n\n  //Call for userData after successful authorization\n\n  dataReq(): Observable<any> {\n    let tok = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'token ' + tok\n      })\n  }\n    return this.http.get<any>(this.dataUrl,httpOptions);\n  }\n\n  initialVal(user: string) {\n    this.userN = user;\n    //console.log(this.userN)\n  }\n  //Call for Authguard\n\n  checkLog() {\n    return !!localStorage.getItem('token')\n  }\n\n  //Logout call\n\n  logoutUser(){\n    localStorage.removeItem('token')\n    this.route.navigate(['/login'])\n  }\n\n  //Updated string call for Searchbox\n\n  updateUser(newUser: string) {\n    this.userN = newUser;\n    let tok = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'token ' + tok\n      })\n    }\n    return this.http.get<any>(this.userUrl+this.userN,httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n  //Repositories call\n    getrepos() {\n      let tok = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'token ' + tok\n      })\n    }\n    return this.http.get<any>(this.userUrl+this.userN+'/repos',httpOptions).pipe(\n      catchError(this.handleError)\n    );\n    }\n    //Gists Call\n    getgist() {\n      let tok = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'token ' + tok\n      })\n    }\n    return this.http.get<any>(this.userUrl+this.userN+'/gists',httpOptions).pipe(\n      catchError(this.handleError)\n    );\n    }\n    //Follower's call\n    getfollower() {\n      let tok = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'token ' + tok\n      })\n    }\n    return this.http.get<any>(this.userUrl+this.userN+'/followers',httpOptions).pipe(\n      catchError(this.handleError)\n    );\n    }\n    // Following call\n    getfollowing() {\n      let tok = localStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Authorization': 'token ' + tok\n      })\n    }\n    return this.http.get<any>(this.userUrl+this.userN+'/following',httpOptions).pipe(\n      catchError(this.handleError)\n    );\n    }\n  //Error handling\n\n  private handleError(err: HttpErrorResponse) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is ${err.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  } \n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n  private data:string;\n  private name:string;\n\n  setValue(value: string) {\n    this.data = value;\n  }\n  \n  getValue() {\n    return this.data;\n  }\n\n  setThis(value: string) {\n    this.name = value;\n  }\n  getThis() {\n    return this.name\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJ2aWV3L3VzZXJ2aWV3LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\"></a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n            <li class=\\\"nav-item active\\\">\\r\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)= \\\"ngOnInit()\\\">Home </a>\\r\\n            </li>\\r\\n          </ul>\\r\\n      <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" (click) = \\\"reqServ.logoutUser()\\\">Logout <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n</nav>    \\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-xl-3 col-lg-3 col-md-4\\\">\\r\\n      <div class=\\\"row m-4\\\">\\r\\n        <div class=\\\"card border border-info\\\" style=\\\"width: 18rem;\\\">\\r\\n          <img src=\\\"{{userData.avatar_url}}\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\r\\n          <div class=\\\"card-body\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row m-4\\\">\\r\\n        <p class=\\\"font-weight-normal\\\">Name: {{userData.login}}</p>\\r\\n      </div>\\r\\n      <div class=\\\"row m-4\\\">\\r\\n        <p class=\\\"font-weight-normal\\\">{{userData.type}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col col-xl-9 col-lg-9 col-md-8\\\">\\r\\n      <div class=\\\"row m-4\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\" id=\\\"basic-addon1\\\">@</span>\\r\\n          </div>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" aria-label=\\\"Username\\\" aria-describedby=\\\"basic-addon1\\\" [(ngModel)] =\\\"newUser\\\" (keyup)=\\\"searchUser()\\\"> \\r\\n          <!--<button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">Search</button>-->\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row m-4\\\">\\r\\n        <nav class=\\\"nav\\\">\\r\\n        <a class=\\\"nav-link border btn btn-info\\\" (click) = \\\"repoView()\\\"> Repositories <span class=\\\"badge badge-light\\\">{{userData.public_repos}}</span></a>\\r\\n        <a class=\\\"nav-link border btn btn-info\\\" (click) = \\\"gistView()\\\"> Gists <span class=\\\"badge badge-light\\\">{{userData.public_gists}}</span></a> \\r\\n        <a class=\\\"nav-link border btn btn-info\\\" (click) = \\\"followerView()\\\"> Followers <span class=\\\"badge badge-light\\\">{{userData.followers}}</span> </a> \\r\\n        <a class=\\\"nav-link border btn btn-info\\\" (click) = \\\"followingView()\\\"> Following <span class=\\\"badge badge-light\\\">{{userData.following}}</span> </a>\\r\\n        </nav>\\r\\n      </div>\\r\\n      <div class=\\\"row m-4\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <div *ngFor = \\\"let data of clickData\\\">\\r\\n              <div class=\\\"row border-bottom\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <h4 *ngIf = \\\"data.name\\\"><a href=\\\"{{data.html_url}}\\\" target=\\\"_blank\\\">{{data.name}}</a></h4>\\r\\n                  <h4 *ngIf = \\\"data.login\\\"><a href=\\\"{{data.html_url}}\\\" target=\\\"_blank\\\">{{data.login}}</a></h4>\\r\\n                  <h4 *ngIf = \\\"data.git_push_url\\\"><a href=\\\"{{data.html_url}}\\\" target=\\\"_blank\\\">Git Push Url: {{data.git_push_url}}</a></h4>\\r\\n                  <h4 *ngIf = \\\"data.git_pull_url\\\"><a href=\\\"{{data.html_url}}\\\" target=\\\"_blank\\\">Git Pull Url: {{data.git_pull_url}}</a></h4>\\r\\n                  <p >Description: {{data.description}}</p>\\r\\n                </div>\\r\\n                <div class=\\\"col pb-2 pt-2\\\">\\r\\n                <div *ngIf = \\\"data.watchers\\\"><span class=\\\"label label-primary\\\">{{data.watchers}} Watchers</span></div>\\r\\n                <div *ngIf = \\\"data.forks\\\"><span class=\\\"label label-primary\\\">{{data.forks}} Forks</span></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from '../shared.service';\nimport { ReqService } from '../req.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-userview',\n  templateUrl: './userview.component.html',\n  styleUrls: ['./userview.component.css']\n})\nexport class UserviewComponent implements OnInit {\n\n  typedData:any = {};\n  userData:any;\n  errorMes: string;\n  newUser:string;\n  repoData:any;\n  gistData:any;\n  followerData:any;\n  followingData: any;\n  clickData:any;\n  constructor(private shared: SharedService,\n              private reqServ: ReqService,\n              private route: Router) { }\n  //Data Request on component initiation\n  ngOnInit() {\n    this.reqServ.dataReq().subscribe(\n      res => {\n        this.userData = res\n          },\n      error => {\n        if (error instanceof HttpErrorResponse) {\n          if(error.status === 401) {\n            localStorage.removeItem('token')\n            this.route.navigate(['/login'])\n          }\n        }\n      }\n    )\n  }\n\n  //Searching User call\n  searchUser() {\n    this.reqServ.updateUser(this.newUser).subscribe(\n      dat => {\n        this.userData = dat\n      },\n      error => this.errorMes = <any>error\n    );\n  }\n\n  //Repositories call\n\n  repoView() {\n    let some = this.reqServ.initialVal(this.userData.login)\n    this.reqServ.getrepos().subscribe(\n      re => {\n        this.clickData = re\n        //console.log(re)\n      },\n      error => this.errorMes =<any>error\n    );\n  }\n\n  //Gists call\n\n  gistView() {\n    let some = this.reqServ.initialVal(this.userData.login)\n    this.reqServ.getgist().subscribe(\n      res => {\n        this.clickData = res\n        //console.log(res)\n      },\n      error => this.errorMes = <any>error\n    );\n  }\n\n  //Follower's call\n\n  followerView() {\n    let some = this.reqServ.initialVal(this.userData.login)\n    this.reqServ.getfollower().subscribe(\n      re => {\n        this.clickData = re\n        //console.log(re)\n      },\n      error => this.errorMes = <any>error\n    );\n  }\n\n  //Following call\n\n  followingView() {\n    let some = this.reqServ.initialVal(this.userData.login)\n    this.reqServ.getfollowing().subscribe(\n      res => {\n        this.clickData = res\n        //console.log(res)\n      },\n      error => this.errorMes = <any>error\n    );\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}